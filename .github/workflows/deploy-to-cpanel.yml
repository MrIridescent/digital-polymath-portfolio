name: Deploy to cPanel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Create deployment package
      run: |
        # Create a deployment directory
        mkdir -p deployment
        
        # Copy the built files
        cp -r out/* deployment/
        
        # Copy additional assets if needed
        if [ -d "public" ]; then
          cp -r public/* deployment/ 2>/dev/null || true
        fi
        
        # Create .htaccess for cPanel
        cat > deployment/.htaccess << 'EOF'
        # Enable compression
        <IfModule mod_deflate.c>
          AddOutputFilterByType DEFLATE text/plain
          AddOutputFilterByType DEFLATE text/html
          AddOutputFilterByType DEFLATE text/xml
          AddOutputFilterByType DEFLATE text/css
          AddOutputFilterByType DEFLATE application/xml
          AddOutputFilterByType DEFLATE application/xhtml+xml
          AddOutputFilterByType DEFLATE application/rss+xml
          AddOutputFilterByType DEFLATE application/javascript
          AddOutputFilterByType DEFLATE application/x-javascript
        </IfModule>
        
        # Cache static assets
        <IfModule mod_expires.c>
          ExpiresActive on
          ExpiresByType text/css "access plus 1 year"
          ExpiresByType application/javascript "access plus 1 year"
          ExpiresByType image/png "access plus 1 year"
          ExpiresByType image/jpg "access plus 1 year"
          ExpiresByType image/jpeg "access plus 1 year"
          ExpiresByType image/gif "access plus 1 year"
          ExpiresByType image/svg+xml "access plus 1 year"
          ExpiresByType image/webp "access plus 1 year"
          ExpiresByType font/woff "access plus 1 year"
          ExpiresByType font/woff2 "access plus 1 year"
        </IfModule>
        
        # Security headers
        <IfModule mod_headers.c>
          Header always set X-Content-Type-Options nosniff
          Header always set X-Frame-Options DENY
          Header always set X-XSS-Protection "1; mode=block"
          Header always set Referrer-Policy "strict-origin-when-cross-origin"
          Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"
        </IfModule>
        
        # Redirect to HTTPS (if available)
        RewriteEngine On
        RewriteCond %{HTTPS} off
        RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
        
        # Handle Next.js static export routing
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteCond %{REQUEST_URI} !^/api/
        RewriteRule ^(.*)$ /$1.html [L,QSA]
        
        # Fallback to index.html for SPA routing
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        RewriteRule . /index.html [L]
        EOF
        
        # Create a simple deployment info file
        echo "Deployed on: $(date)" > deployment/deployment-info.txt
        echo "Commit: ${{ github.sha }}" >> deployment/deployment-info.txt
        echo "Branch: ${{ github.ref_name }}" >> deployment/deployment-info.txt
        
    - name: Deploy to cPanel via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.CPANEL_FTP_SERVER }}
        username: ${{ secrets.CPANEL_FTP_USERNAME }}
        password: ${{ secrets.CPANEL_FTP_PASSWORD }}
        local-dir: ./deployment/
        server-dir: ${{ secrets.CPANEL_FTP_SERVER_DIR }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.next/**
          **/coverage/**
          **/.nyc_output/**
          **/*.log
        
    - name: Deployment Success Notification
      if: success()
      run: |
        echo "üéâ Deployment successful!"
        echo "Your Digital Polymath Portfolio is now live!"
        echo "Commit: ${{ github.sha }}"
        echo "Deployed files from: ./deployment/"
        
    - name: Deployment Failure Notification
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Please check the logs above for details."
